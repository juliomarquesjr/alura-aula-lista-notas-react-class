[{"/Users/juliomarques/Documents/Estudos/Estudo-React/Exercicios/listadenotas/src/index.js":"1","/Users/juliomarques/Documents/Estudos/Estudo-React/Exercicios/listadenotas/src/App.js":"2","/Users/juliomarques/Documents/Estudos/Estudo-React/Exercicios/listadenotas/src/reportWebVitals.js":"3","/Users/juliomarques/Documents/Estudos/Estudo-React/Exercicios/listadenotas/src/components/Formulario/Formulario.jsx":"4","/Users/juliomarques/Documents/Estudos/Estudo-React/Exercicios/listadenotas/src/components/TabelaNotas/index.js":"5","/Users/juliomarques/Documents/Estudos/Estudo-React/Exercicios/listadenotas/src/components/TabelaNotas/TabelaNotas.jsx":"6","/Users/juliomarques/Documents/Estudos/Estudo-React/Exercicios/listadenotas/src/components/Formulario/index.js":"7"},{"size":507,"mtime":1631011326374,"results":"8","hashOfConfig":"9"},{"size":1466,"mtime":1631032070523,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1631011026827,"results":"11","hashOfConfig":"9"},{"size":2235,"mtime":1631032697452,"results":"12","hashOfConfig":"9"},{"size":68,"mtime":1631017084299,"results":"13","hashOfConfig":"9"},{"size":1382,"mtime":1631029175326,"results":"14","hashOfConfig":"9"},{"size":65,"mtime":1631014114969,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"10bt58",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/juliomarques/Documents/Estudos/Estudo-React/Exercicios/listadenotas/src/index.js",[],["33","34"],"/Users/juliomarques/Documents/Estudos/Estudo-React/Exercicios/listadenotas/src/App.js",["35"],"import React, { Component } from 'react';\nimport Formulario from './components/Formulario/';\nimport TabelaNotas from './components/TabelaNotas/';\nimport './assets/App.css';\nimport './assets/css/bootstrap.min.css'\nimport Logo from \"./assets/img/reactjs.png\"\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    //Propriedade especial do React\n    this.state = {\n      notas: []\n    }\n  }\n\n  criarNota(titulo, texto) {\n    //Criar um array com a nova nota\n    const NovaNota = { titulo, texto };\n\n    //Cria um novo array com as informações anteriores e as novas\n    const novoArray = [...this.state.notas, NovaNota];\n\n    //Atributo para atualizar o estado do this.state passando o array atualizado, contanenado.\n    const novoEstado = {\n      notas: novoArray\n    }\n    //Atributo Especial do React\n    this.setState(novoEstado)\n\n    console.log(this.state.notas);\n  }\n\n  render() {\n    return (\n      <section>\n        <div className=\"container py-4\">\n          <header class=\"pb-3 mb-4 border-bottom\">\n            <a href=\"/\" class=\"d-flex align-items-center text-dark text-decoration-none\">\n            <img src={Logo} width={32} height={32}/>\n              <span class=\"fs-4\">React.js - Cadastro de Notas</span>\n            </a>\n          </header>\n          <Formulario passandoCriarNota={this.criarNota.bind(this)} />\n          <TabelaNotas passandoNotas={this.state.notas} />\n        </div>\n      </section>\n    );\n  }\n\n}\n\nexport default App;\n","/Users/juliomarques/Documents/Estudos/Estudo-React/Exercicios/listadenotas/src/reportWebVitals.js",[],"/Users/juliomarques/Documents/Estudos/Estudo-React/Exercicios/listadenotas/src/components/Formulario/Formulario.jsx",["36"],"import React, { Component } from 'react';\nimport TabelaNotas from '../TabelaNotas/';\n\nclass Formulario extends Component {\n  constructor(props) {\n    super(props);\n    this._titulo = \"\";\n    this._texto = \"\";\n  }\n\n  _handleTitulo(evento) {\n    evento.stopPropagation();\n    this._titulo = evento.target.value;\n    //console.log(this._titulo);\n  }\n\n  _handleTexto(evento) {\n    evento.stopPropagation();\n    this._texto = evento.target.value;\n    //console.log(this._texto);\n  }\n\n  _criarNota(evento) {\n    evento.preventDefault(); //Para o submit do formulário\n    evento.stopPropagation(); //Impede a propagação do evento\n    this.props.passandoCriarNota(this._titulo, this._texto);\n  }\n\n  render() {\n    return (\n      <section>\n        <div className=\"row\">\n          <div className=\"col\">\n            <form onSubmit={this._criarNota.bind(this)}>\n              <div className=\"row mb-3\">\n                <label for=\"inputEmail3\" className=\"col-sm-2 col-form-label\">Titulo</label>\n                <div className=\"col-sm-10\">\n                  <input type=\"text\" className=\"form-control\" id=\"titulo-nota\" onChange={this._handleTitulo.bind(this)} />\n                </div>\n              </div>\n              <div className=\"row mb-3\">\n                <label for=\"inputPassword3\" className=\"col-sm-2 col-form-label\">Nota em Texto</label>\n                <div className=\"col-sm-10\">\n                  <textarea rows={4} className=\"form-control\" id=\"texto-nota\" onChange={this._handleTexto.bind(this)} />\n                </div>\n              </div>\n              <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n              <button type=\"submit\" className=\"btn btn-primary btn-md btn-left\">Cadastrar Nota</button>\n              </div>\n            </form>\n          </div>\n\n          <div className=\"col\">\n            <div class=\"h-100 p-5 bg-light border rounded-3\">\n              <h2>Funcionamento</h2>\n              <p>Ao adicionar os <strong>TITULO</strong> e a <strong>MENSAGEM</strong>, os dados são salvos e enviados para a tabela, atualizando o estado do <strong>React.js</strong> automaticamente.</p>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Formulario;","/Users/juliomarques/Documents/Estudos/Estudo-React/Exercicios/listadenotas/src/components/TabelaNotas/index.js",[],"/Users/juliomarques/Documents/Estudos/Estudo-React/Exercicios/listadenotas/src/components/TabelaNotas/TabelaNotas.jsx",[],"/Users/juliomarques/Documents/Estudos/Estudo-React/Exercicios/listadenotas/src/components/Formulario/index.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":41,"column":13,"nodeType":"43","endLine":41,"endColumn":53},{"ruleId":"44","severity":1,"message":"45","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":19},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'TabelaNotas' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]